zmodload zsh/datetime
start=$EPOCHREALTIME

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


#
# Variables
#

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=10000
ZSH_AUTOSUGGEST_USE_ASYNC=1
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_DIR=$HOME/.config/zsh
ZSH_PLUGS=("fzf-tab/fzf-tab.plugin.zsh" "zsh-lazyload/zsh-lazyload.zsh" \
		   "fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh" \
		   "zsh-autosuggestions/zsh-autosuggestions.zsh" \
		   "zsh-completions/zsh-completions.plugin.zsh" \
		   "history-search-multi-word/history-search-multi-word.plugin.zsh" \
		   "zsh-history-substring-search/zsh-history-substring-search.zsh" \
		   "powerlevel10k/powerlevel10k.zsh-theme" "forgit/forgit.plugin.zsh")

export EDITOR=micro
export GIT_EDITOR=micro
export RUSTC_WRAPPER=sccache
export GPG_TTY=$(tty)
export FZF_DEFAULT_COMMAND="rg --files --no-ignore-vcs --hidden"

{% if yadm.os == "Linux" %}
export WINEESYNC=1
export WINEFSYNC=1
export PAGER='moar'
export SYSTEMD_LESS='FRSMK'
export SYSTEMD_PAGER='moar'
{% endif %}


#
# Path
#

path+=("$HOME/.local/bin")
fpath+=("$HOME/.config/zsh/func")

{% if yadm.os == "Linux" %}
path+=('/usr/lib/ccache/bin/')
{% endif %}

{% if yadm.os == "Darwin" %}
export HOMEBREW_PREFIX="/usr/local"
export HOMEBREW_CELLAR="/usr/local/Cellar"
export HOMEBREW_REPOSITORY="/usr/local/Homebrew"
path+=("$HOMEBREW_PREFIX/bin" "$HOMEBREW_PREFIX/sbin" "$HOMEBREW_PREFIX/bin/ccache" "$HOMEBREW_PREFIX/opt/python/libexec/bin")
manpath+=("$HOMEBREW_PREFIX/share/man")
infopath+=("$HOMEBREW_PREFIX/share/info")
fpath+=("$HOMEBREW_PREFIX/share/zsh/site-functions")
{% endif %}


#
# Options
#

bindkey -e
setopt sharehistory autocd extendedglob append_history correct \
	   hist_ignore_all_dups hist_verify hist_ignore_space complete_aliases

# The following lines were added by compinstall
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} m:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'l:|=* r:|=*'
zstyle ':completion::complete:*' gain-privileges 1
zstyle ':completion:*' menu select
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle :plugin:history-search-multi-word reset-prompt-protect 1

autoload -Uz compinit edit-command-line add-zsh-hook run-help-git run-help-ip \
			 run-help-openssl run-help-p4 run-help-sudo run-help-svk \
			 run-help-svn $ZSH_DIR/func/*

# Load and initialize the completion system ignoring insecure directories with a
# cache time of 20 hours, so it should almost always regenerate the first time a
# shell is opened each day.
_comp_files=(${ZDOTDIR:-$HOME}/.zcompdump(Nm-20))
if (( $#_comp_files )); then
  compinit -i -C
else
  compinit -i
fi
unset _comp_files

# zcompile .zshrc
zcompare ${ZDOTDIR:-${HOME}}/.zshrc

# zcompile the completion cache
zcompare ${ZDOTDIR:-${HOME}}/.zcompdump

# zcompile p10k config
zcompare ${ZDOTDIR:-${HOME}}/.p10k.zsh
zcompare "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"

# zcompile sourced scripts
for file in $ZSH_DIR/**/*.zsh; do
	zcompare "$file"
done

# zcompile autoloaded functions
for file in $ZSH_DIR/func/^(*.zwc)(.); do
	zcompare "$file"
done

exit_zsh() { exit }
zle -N exit_zsh
zle -N edit-command-line
zle -N history-substring-search-up
zle -N history-substring-search-down


#
# Sources
#

for p in $ZSH_PLUGS; do
	source "$ZSH_DIR/$p"
done

#
# Aliases
#

autoload -Uz run-help
(( ${+aliases[run-help]} )) && unalias run-help
alias help=run-help

alias ls='exa'
alias tree='exa --tree'
alias nano='micro'
alias cat='bat'

if [ -z ${DISPLAY+x} ] ; then
	alias gpg="gpg --pinentry-mode loopback "
fi

{% if yadm.os == "Linux" %}
alias cp='cp --reflink=auto'
alias tkg="bash $HOME/git/tkg/update.sh"
alias copy="xclip -selection c"
alias yay='paru'
alias whichpkg="pacman -Qo"
{% endif %}


#
# Bindings
#

bindkey '^X^e' edit-command-line
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^D' exit_zsh


#
# rbenv
#

lazyload rbenv ruby rake bundle bundler gem irb -- 'eval "$(rbenv init -)"'

{% if yadm.os == "Linux" %}
#
# Completion rehash
#

trap 'rehash' USR1

#
# Terminal title hooks
#

if [[ "$TERM" == (Eterm*|alacritty*|aterm*|gnome*|konsole*|kterm*|putty*|rxvt*|screen*|tmux*|xterm*|foot*) ]]; then
	add-zsh-hook -Uz precmd xterm_title_precmd
	add-zsh-hook -Uz preexec xterm_title_preexec
fi

{% endif %}


[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

let "dur = $EPOCHREALTIME - $start"
echo "Execution time: $dur seconds"
