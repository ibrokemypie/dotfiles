#!/bin/sh

system_type=$(uname -s)

shared_progs=(aria2 exa fd fzf git pv tealdeer tmux wget yadm zsh bat ccache sccache fd ripgrep)
mac_progs=(gpg delta bitwarden iterm2)
arch_progs=(moar gnupg git-delta-bin)
zsh_plugs=("https://github.com/Aloxaf/fzf-tab" "https://github.com/zsh-users/zsh-autosuggestions" \
           "https://github.com/zdharma/fast-syntax-highlighting" "https://github.com/zsh-users/zsh-history-substring-search"\
           "https://github.com/romkatv/powerlevel10k" "https://github.com/g-plane/zsh-yarn-autocompletions" \
           "https://github.com/mroth/evalcache" "https://github.com/wfxr/forgit")

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  brew update
  brew upgrade
  brew install ${shared_progs[@]} ${mac_progs[@]}
fi


if [ "$system_type" = "Linux" ]; then
	if [ -f /etc/os-release ]; then
		. /etc/os-release
		if [ "$ID" = "arch" ]; then
			sudo pacman -S --noconfirm --needed base-devel ccache

			# install paru if missing
			if [ ! -f /usr/bin/paru ]; then
				mkdir "$HOME/paru"
				git clone https://aur.archlinux.org/paru-bin.git "$HOME/paru"
				cd "$HOME/paru"
				makepkg -iscrC --noconfirm --needed
				cd "$HOME"
				rm -rf "$HOME/paru"
			fi
			paru -S --noconfirm --needed ${shared_progs[@]} ${arch_progs[@]}
		else
			echo "Not an arch system."
		fi
	else
		echo "Unable to find /etc/os-release."
	fi
fi


cd "$HOME/.config/zsh"

for plug in ${zsh_plugs[@]}; do
	plugdir="$(basename $plug)"
	if [ -d "$plugdir" ]; then
		cd "$plugdir"
		status=$(git pull)
		if [ "$status" != "Already up to date." ]; then
			if [ "$plugdir" = "fzf-tab" ]; then
				fzf_tab_updated=true
			fi
			echo "$status"
		fi
	else
		git clone "$plug" "$plugdir"
		if [ "$plugdir" = "fzf-tab" ]; then
			fzf_tab_updated=true
		fi
	fi
done

if [[ "$fzf_tab_updated" = true ]]; then
	zsh -c "source \"$HOME/.config/zsh/fzf-tab/fzf-tab.plugin.zsh\"; build-fzf-tab-module"
fi
